<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/aop
					    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<!--依赖注入，扫描--><!--设置使用注解的类所在的包-->
    <context:component-scan base-package="com.movie.controller"/>
    <!--静态资源不会被过滤-->
    <mvc:annotation-driven />
    <mvc:default-servlet-handler />
    <!-- aop 决定是基于接口(jdk)的还是基于类(cglib)的代理被创建
	<aop:aspectj-autoproxy proxy-target-class="true"/>-->
	
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

<!-- 以下是当实现每次请求都返回json格式数据时配置 -->
    <!-- json数据转换器。将请求对象与返回值转换程json格式 与POJO对象映射 -->
    <bean id="mappingjacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>text/json;charset=UTF-8</value>  
                <value>application/json;charset=UTF-8</value> 
            </list>
        </property>
    </bean>
    
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingjacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>
    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 
    <!-- 简单异常处理       出现异常时跳转的页面		注入异常对象，就像try catch参数中的Exception ex	自定义的异常
   <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">    
   	<property name="defaultErrorView" value="error"></property>   	
   	<property name="exceptionAttribute" value="ex"></property>   	
   	<property name="exceptionMappings">
   		<props>
   		<prop key="com.movie.Exception.VideoException">video_error</prop>   			
   		</props>
   	</property>
   </bean>
   -->
   <!-- 自定义的全局异常处理器，只要实现了HandlerExceptionResolver接口就是全局异常处理器 -->
   <bean class="com.movie.Exception.VideoExceptionResolver"/>
</beans>